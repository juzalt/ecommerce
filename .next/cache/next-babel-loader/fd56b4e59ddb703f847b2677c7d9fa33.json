{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nvar initialState = {\n  lastUpdate: 0,\n  light: false,\n  cart: {}\n};\nexport var actionTypes = {\n  TICK: 'TICK',\n  ADD_TO_CART: 'ADD_TO_CART',\n  DECREMENT: 'DECREMENT',\n  RESET: 'RESET'\n}; // REDUCERS\n\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.TICK:\n      return _Object$assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      });\n\n    case actionTypes.ADD_TO_CART:\n      return _Object$assign({}, state, {\n        cart: state.cart + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return _Object$assign({}, state, {\n        count: state.count - 1\n      });\n\n    default:\n      return state;\n  }\n}; // ACTIONS\n\nexport var serverRenderClock = function serverRenderClock(isServer) {\n  return function (dispatch) {\n    return dispatch({\n      type: actionTypes.TICK,\n      light: !isServer,\n      ts: _Date$now()\n    });\n  };\n};\nexport var startClock = function startClock(dispatch) {\n  return setInterval(function () {\n    dispatch({\n      type: actionTypes.TICK,\n      light: true,\n      ts: _Date$now()\n    });\n  }, 1000);\n};\nexport var addToCart = function addToCart(product) {\n  return {\n    type: actionTypes.ADD_TO_CART,\n    product: product\n  };\n};\nexport function initializeStore(initialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n}","map":{"version":3,"sources":["/home/zxltrn/Documents/code/courseit/ecommerce/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","initialState","lastUpdate","light","cart","actionTypes","TICK","ADD_TO_CART","DECREMENT","RESET","reducer","state","action","type","ts","count","serverRenderClock","isServer","dispatch","startClock","setInterval","addToCart","product","initializeStore"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CADO;AAEnBC,EAAAA,KAAK,EAAE,KAFY;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;AAMA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAE,MADmB;AAEzBC,EAAAA,WAAW,EAAE,aAFY;AAGzBC,EAAAA,SAAS,EAAE,WAHc;AAIzBC,EAAAA,KAAK,EAAE;AAJkB,CAApB,C,CAOP;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACC,IAAjB;AACE,aAAO,eAAc,EAAd,EAAkBK,KAAlB,EAAyB;AAC9BT,QAAAA,UAAU,EAAEU,MAAM,CAACE,EADW;AAE9BX,QAAAA,KAAK,EAAE,CAAC,CAACS,MAAM,CAACT;AAFc,OAAzB,CAAP;;AAIF,SAAKE,WAAW,CAACE,WAAjB;AACE,aAAO,eAAc,EAAd,EAAkBI,KAAlB,EAAyB;AAC9BP,QAAAA,IAAI,EAAEO,KAAK,CAACP,IAAN,GAAa;AADW,OAAzB,CAAP;;AAGF,SAAKC,WAAW,CAACG,SAAjB;AACE,aAAO,eAAc,EAAd,EAAkBG,KAAlB,EAAyB;AAC9BI,QAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF;AACE,aAAOJ,KAAP;AAfJ;AAiBD,CAlBM,C,CAoBP;;AACA,OAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,QAAQ;AAAA,SAAI,UAAAC,QAAQ,EAAI;AACvD,WAAOA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAER,WAAW,CAACC,IAApB;AAA0BH,MAAAA,KAAK,EAAE,CAACc,QAAlC;AAA4CH,MAAAA,EAAE,EAAE;AAAhD,KAAD,CAAf;AACD,GAFwC;AAAA,CAAlC;AAIP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAAAD,QAAQ,EAAI;AACpC,SAAOE,WAAW,CAAC,YAAM;AACvBF,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAER,WAAW,CAACC,IAApB;AAA0BH,MAAAA,KAAK,EAAE,IAAjC;AAAuCW,MAAAA,EAAE,EAAE;AAA3C,KAAD,CAAR;AACD,GAFiB,EAEf,IAFe,CAAlB;AAGD,CAJM;AAMP,OAAO,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAa;AACpC,SAAO;AAAET,IAAAA,IAAI,EAAER,WAAW,CAACE,WAApB;AAAiCe,IAAAA,OAAO,EAAPA;AAAjC,GAAP;AACD,CAFM;AAIP,OAAO,SAASC,eAAT,CAA0BtB,YAA1B,EAAwC;AAC7C,SAAOJ,WAAW,CAChBa,OADgB,EAEhBT,YAFgB,EAGhBF,mBAAmB,CAACD,eAAe,CAACE,eAAD,CAAhB,CAHH,CAAlB;AAKD","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\n\nconst initialState = {\n  lastUpdate: 0,\n  light: false,\n  cart: {}\n}\n\nexport const actionTypes = {\n  TICK: 'TICK',\n  ADD_TO_CART: 'ADD_TO_CART',\n  DECREMENT: 'DECREMENT',\n  RESET: 'RESET'\n}\n\n// REDUCERS\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.TICK:\n      return Object.assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      })\n    case actionTypes.ADD_TO_CART:\n      return Object.assign({}, state, {\n        cart: state.cart + 1\n      })\n    case actionTypes.DECREMENT:\n      return Object.assign({}, state, {\n        count: state.count - 1\n      })\n    default:\n      return state\n  }\n}\n\n// ACTIONS\nexport const serverRenderClock = isServer => dispatch => {\n  return dispatch({ type: actionTypes.TICK, light: !isServer, ts: Date.now() })\n}\n\nexport const startClock = dispatch => {\n  return setInterval(() => {\n    dispatch({ type: actionTypes.TICK, light: true, ts: Date.now() })\n  }, 1000)\n}\n\nexport const addToCart = (product) => {\n  return { type: actionTypes.ADD_TO_CART, product }\n}\n\nexport function initializeStore (initialState) {\n  return createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\n  )\n}\n"]},"metadata":{},"sourceType":"module"}