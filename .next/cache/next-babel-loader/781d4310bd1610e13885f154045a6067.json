{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nconst initialState = {\n  lastUpdate: 0,\n  light: false,\n  productCart: {}\n};\nexport const actionTypes = {\n  ADD_TO_CART: 'ADD_TO_CART'\n}; // REDUCERS\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      return _Object$assign({}, state, {\n        productCart: action.product\n      });\n\n    default:\n      return state;\n  }\n}; // ACTIONS\n\nexport const serverRenderClock = isServer => dispatch => {\n  return dispatch({\n    type: actionTypes.TICK,\n    light: !isServer,\n    ts: _Date$now()\n  });\n};\nexport const startClock = dispatch => {\n  return setInterval(() => {\n    dispatch({\n      type: actionTypes.TICK,\n      light: true,\n      ts: _Date$now()\n    });\n  }, 1000);\n};\nexport const addToCart = product => dispatch => {\n  return dispatch({\n    type: actionTypes.ADD_TO_CART,\n    product\n  });\n};\nexport function initializeStore(initialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n}","map":{"version":3,"sources":["/home/zxltrn/Documents/code/courseit/ecommerce/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","initialState","lastUpdate","light","productCart","actionTypes","ADD_TO_CART","reducer","state","action","type","product","serverRenderClock","isServer","dispatch","TICK","ts","startClock","setInterval","addToCart","initializeStore"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CADO;AAEnBC,EAAAA,KAAK,EAAE,KAFY;AAGnBC,EAAAA,WAAW,EAAE;AAHM,CAArB;AAMA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,WAAW,EAAE;AADY,CAApB,C,CAIP;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,WAAW,CAACC,WAAjB;AACE,aAAO,eAAc,EAAd,EAAkBE,KAAlB,EAAyB;AAC9BJ,QAAAA,WAAW,EAAEK,MAAM,CAACE;AADU,OAAzB,CAAP;;AAGF;AACE,aAAOH,KAAP;AANJ;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMI,iBAAiB,GAAGC,QAAQ,IAAIC,QAAQ,IAAI;AACvD,SAAOA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEL,WAAW,CAACU,IAApB;AAA0BZ,IAAAA,KAAK,EAAE,CAACU,QAAlC;AAA4CG,IAAAA,EAAE,EAAE;AAAhD,GAAD,CAAf;AACD,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAGH,QAAQ,IAAI;AACpC,SAAOI,WAAW,CAAC,MAAM;AACvBJ,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEL,WAAW,CAACU,IAApB;AAA0BZ,MAAAA,KAAK,EAAE,IAAjC;AAAuCa,MAAAA,EAAE,EAAE;AAA3C,KAAD,CAAR;AACD,GAFiB,EAEf,IAFe,CAAlB;AAGD,CAJM;AAMP,OAAO,MAAMG,SAAS,GAAIR,OAAD,IAAaG,QAAQ,IAAI;AAChD,SAAOA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEL,WAAW,CAACC,WAApB;AAAiCK,IAAAA;AAAjC,GAAD,CAAf;AACD,CAFM;AAIP,OAAO,SAASS,eAAT,CAA0BnB,YAA1B,EAAwC;AAC7C,SAAOJ,WAAW,CAChBU,OADgB,EAEhBN,YAFgB,EAGhBF,mBAAmB,CAACD,eAAe,CAACE,eAAD,CAAhB,CAHH,CAAlB;AAKD","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\n\nconst initialState = {\n  lastUpdate: 0,\n  light: false,\n  productCart: {}\n}\n\nexport const actionTypes = {\n  ADD_TO_CART: 'ADD_TO_CART'\n}\n\n// REDUCERS\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      return Object.assign({}, state, {\n        productCart: action.product\n      })\n    default:\n      return state\n  }\n}\n\n// ACTIONS\nexport const serverRenderClock = isServer => dispatch => {\n  return dispatch({ type: actionTypes.TICK, light: !isServer, ts: Date.now() })\n}\n\nexport const startClock = dispatch => {\n  return setInterval(() => {\n    dispatch({ type: actionTypes.TICK, light: true, ts: Date.now() })\n  }, 1000)\n}\n\nexport const addToCart = (product) => dispatch => {\n  return dispatch({ type: actionTypes.ADD_TO_CART, product })\n}\n\nexport function initializeStore (initialState) {\n  return createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\n  )\n}\n"]},"metadata":{},"sourceType":"module"}